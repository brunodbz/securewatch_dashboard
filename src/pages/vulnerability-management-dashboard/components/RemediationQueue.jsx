import React, { useState } from 'react';
import Icon from '../../../components/AppIcon';
import Button from '../../../components/ui/Button';

const RemediationQueue = () => {
  const [sortBy, setSortBy] = useState('cvss');
  const [filterSeverity, setFilterSeverity] = useState('all');

  const vulnerabilities = [
    {
      id: "CVE-2024-0001",
      title: "Remote Code Execution in Apache Struts",
      cvss: 9.8,
      severity: "critical",
      affectedAssets: 23,
      estimatedFixTime: "2-4 hours",
      category: "Web Application",
      lastDetected: "2024-08-20T18:30:00Z",
      status: "open",
      assignee: "Security Team Alpha"
    },
    {
      id: "CVE-2024-0002",
      title: "SQL Injection in Custom CRM System",
      cvss: 9.1,
      severity: "critical",
      affectedAssets: 8,
      estimatedFixTime: "4-6 hours",
      category: "Database",
      lastDetected: "2024-08-20T16:45:00Z",
      status: "in_progress",
      assignee: "Database Team"
    },
    {
      id: "CVE-2024-0003",
      title: "Privilege Escalation in Windows Server",
      cvss: 8.8,
      severity: "high",
      affectedAssets: 45,
      estimatedFixTime: "1-2 days",
      category: "Operating System",
      lastDetected: "2024-08-20T14:20:00Z",
      status: "open",
      assignee: "Infrastructure Team"
    },
    {
      id: "CVE-2024-0004",
      title: "Cross-Site Scripting in Web Portal",
      cvss: 8.2,
      severity: "high",
      affectedAssets: 12,
      estimatedFixTime: "3-5 hours",
      category: "Web Application",
      lastDetected: "2024-08-20T12:15:00Z",
      status: "open",
      assignee: "Web Development Team"
    },
    {
      id: "CVE-2024-0005",
      title: "Buffer Overflow in Network Driver",
      cvss: 7.9,
      severity: "high",
      affectedAssets: 67,
      estimatedFixTime: "2-3 days",
      category: "Network",
      lastDetected: "2024-08-20T10:30:00Z",
      status: "assigned",
      assignee: "Network Security Team"
    },
    {
      id: "CVE-2024-0006",
      title: "Authentication Bypass in API Gateway",
      cvss: 7.5,
      severity: "high",
      affectedAssets: 19,
      estimatedFixTime: "4-8 hours",
      category: "API",
      lastDetected: "2024-08-20T08:45:00Z",
      status: "open",
      assignee: "API Security Team"
    },
    {
      id: "CVE-2024-0007",
      title: "Directory Traversal in File Server",
      cvss: 6.8,
      severity: "medium",
      affectedAssets: 34,
      estimatedFixTime: "1-2 hours",
      category: "File System",
      lastDetected: "2024-08-19T22:10:00Z",
      status: "open",
      assignee: "File Server Team"
    },
    {
      id: "CVE-2024-0008",
      title: "Weak Encryption in Mobile App",
      cvss: 6.2,
      severity: "medium",
      affectedAssets: 156,
      estimatedFixTime: "1-3 days",
      category: "Mobile",
      lastDetected: "2024-08-19T20:30:00Z",
      status: "in_progress",
      assignee: "Mobile Development Team"
    },
    {
      id: "CVE-2024-0009",
      title: "Information Disclosure in Log Files",
      cvss: 5.9,
      severity: "medium",
      affectedAssets: 89,
      estimatedFixTime: "2-4 hours",
      category: "Logging",
      lastDetected: "2024-08-19T18:15:00Z",
      status: "open",
      assignee: "DevOps Team"
    },
    {
      id: "CVE-2024-0010",
      title: "Session Fixation in User Portal",
      cvss: 5.4,
      severity: "medium",
      affectedAssets: 27,
      estimatedFixTime: "1-2 hours",
      category: "Web Application",
      lastDetected: "2024-08-19T16:45:00Z",
      status: "assigned",
      assignee: "Web Security Team"
    }
  ];

  const getSeverityColor = (severity) => {
    switch (severity) {
      case 'critical': return 'text-error';
      case 'high': return 'text-warning';
      case 'medium': return 'text-accent';
      case 'low': return 'text-success';
      default: return 'text-muted-foreground';
    }
  };

  const getSeverityBg = (severity) => {
    switch (severity) {
      case 'critical': return 'bg-error/10 border-error/20';
      case 'high': return 'bg-warning/10 border-warning/20';
      case 'medium': return 'bg-accent/10 border-accent/20';
      case 'low': return 'bg-success/10 border-success/20';
      default: return 'bg-muted/10 border-muted/20';
    }
  };

  const getStatusIcon = (status) => {
    switch (status) {
      case 'open': return 'AlertCircle';
      case 'in_progress': return 'Clock';
      case 'assigned': return 'User';
      default: return 'Circle';
    }
  };

  const getStatusColor = (status) => {
    switch (status) {
      case 'open': return 'text-error';
      case 'in_progress': return 'text-warning';
      case 'assigned': return 'text-accent';
      default: return 'text-muted-foreground';
    }
  };

  const formatTimeAgo = (dateString) => {
    const date = new Date(dateString);
    const now = new Date();
    const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));
    
    if (diffInHours < 1) return 'Just now';
    if (diffInHours < 24) return `${diffInHours}h ago`;
    const diffInDays = Math.floor(diffInHours / 24);
    return `${diffInDays}d ago`;
  };

  const filteredVulnerabilities = vulnerabilities?.filter(vuln => filterSeverity === 'all' || vuln?.severity === filterSeverity)?.sort((a, b) => {
      switch (sortBy) {
        case 'cvss': return b?.cvss - a?.cvss;
        case 'assets': return b?.affectedAssets - a?.affectedAssets;
        case 'time': return new Date(b.lastDetected) - new Date(a.lastDetected);
        default: return 0;
      }
    })?.slice(0, 10);

  return (
    <div className="bg-card border border-border rounded-lg p-6 elevation-1">
      {/* Header */}
      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6">
        <div>
          <h2 className="text-lg font-semibold text-foreground mb-1">Remediation Priority Queue</h2>
          <p className="text-sm text-muted-foreground">Top vulnerabilities requiring immediate attention</p>
        </div>
        
        <div className="flex items-center space-x-2 mt-4 sm:mt-0">
          {/* Sort Options */}
          <select
            value={sortBy}
            onChange={(e) => setSortBy(e?.target?.value)}
            className="px-3 py-1 text-xs bg-muted border border-border rounded-md text-foreground"
          >
            <option value="cvss">Sort by CVSS</option>
            <option value="assets">Sort by Assets</option>
            <option value="time">Sort by Time</option>
          </select>
          
          {/* Severity Filter */}
          <select
            value={filterSeverity}
            onChange={(e) => setFilterSeverity(e?.target?.value)}
            className="px-3 py-1 text-xs bg-muted border border-border rounded-md text-foreground"
          >
            <option value="all">All Severities</option>
            <option value="critical">Critical</option>
            <option value="high">High</option>
            <option value="medium">Medium</option>
            <option value="low">Low</option>
          </select>
        </div>
      </div>
      {/* Vulnerability List */}
      <div className="space-y-3">
        {filteredVulnerabilities?.map((vuln, index) => (
          <div
            key={vuln?.id}
            className={`p-4 rounded-lg border transition-all hover:elevation-1 ${getSeverityBg(vuln?.severity)}`}
          >
            <div className="flex items-start justify-between mb-3">
              <div className="flex items-start space-x-3">
                <div className="flex items-center justify-center w-6 h-6 bg-background rounded text-xs font-bold">
                  {index + 1}
                </div>
                <div className="flex-1">
                  <div className="flex items-center space-x-2 mb-1">
                    <h3 className="text-sm font-semibold text-foreground line-clamp-1">
                      {vuln?.title}
                    </h3>
                    <span className="text-xs text-muted-foreground font-mono">
                      {vuln?.id}
                    </span>
                  </div>
                  <div className="flex items-center space-x-4 text-xs text-muted-foreground">
                    <span className="flex items-center space-x-1">
                      <Icon name="Tag" size={12} />
                      <span>{vuln?.category}</span>
                    </span>
                    <span className="flex items-center space-x-1">
                      <Icon name="Clock" size={12} />
                      <span>{formatTimeAgo(vuln?.lastDetected)}</span>
                    </span>
                  </div>
                </div>
              </div>
              
              <div className="flex items-center space-x-2">
                <div className={`flex items-center space-x-1 ${getStatusColor(vuln?.status)}`}>
                  <Icon name={getStatusIcon(vuln?.status)} size={14} />
                  <span className="text-xs font-medium capitalize">
                    {vuln?.status?.replace('_', ' ')}
                  </span>
                </div>
              </div>
            </div>

            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-4">
                <div className="flex items-center space-x-1">
                  <span className="text-xs text-muted-foreground">CVSS:</span>
                  <span className={`text-sm font-bold ${getSeverityColor(vuln?.severity)}`}>
                    {vuln?.cvss}
                  </span>
                </div>
                <div className="flex items-center space-x-1">
                  <Icon name="Server" size={12} className="text-muted-foreground" />
                  <span className="text-xs text-muted-foreground">
                    {vuln?.affectedAssets} assets
                  </span>
                </div>
                <div className="flex items-center space-x-1">
                  <Icon name="Timer" size={12} className="text-muted-foreground" />
                  <span className="text-xs text-muted-foreground">
                    {vuln?.estimatedFixTime}
                  </span>
                </div>
              </div>
              
              <div className="flex items-center space-x-2">
                <span className="text-xs text-muted-foreground">
                  {vuln?.assignee}
                </span>
                <Button variant="outline" size="xs" iconName="ExternalLink">
                  Details
                </Button>
              </div>
            </div>
          </div>
        ))}
      </div>
      {/* Footer */}
      <div className="flex items-center justify-between mt-6 pt-4 border-t border-border">
        <span className="text-xs text-muted-foreground">
          Showing top {filteredVulnerabilities?.length} of {vulnerabilities?.length} vulnerabilities
        </span>
        <Button variant="outline" size="sm" iconName="ArrowRight">
          View All
        </Button>
      </div>
    </div>
  );
};

export default RemediationQueue;
import React, { useState } from 'react';
import Icon from '../../../components/AppIcon';
import Button from '../../../components/ui/Button';
import Select from '../../../components/ui/Select';

const DashboardFilters = ({ onFiltersChange }) => {
  const [filters, setFilters] = useState({
    assetGroup: 'all',
    vulnerabilityAge: 'all',
    severityThreshold: 'all',
    remediationStatus: 'all',
    dateRange: '7d'
  });

  const [isExpanded, setIsExpanded] = useState(false);

  const assetGroupOptions = [
    { value: 'all', label: 'All Asset Groups' },
    { value: 'servers', label: 'Servers (1,024)' },
    { value: 'workstations', label: 'Workstations (777)' },
    { value: 'network', label: 'Network Devices (397)' },
    { value: 'cloud', label: 'Cloud Resources (649)' },
    { value: 'mobile', label: 'Mobile Devices (234)' },
    { value: 'iot', label: 'IoT Devices (156)' }
  ];

  const vulnerabilityAgeOptions = [
    { value: 'all', label: 'All Ages' },
    { value: '1d', label: 'Last 24 Hours' },
    { value: '7d', label: 'Last 7 Days' },
    { value: '30d', label: 'Last 30 Days' },
    { value: '90d', label: 'Last 90 Days' },
    { value: '1y', label: 'Over 1 Year' }
  ];

  const severityThresholdOptions = [
    { value: 'all', label: 'All Severities' },
    { value: 'critical', label: 'Critical Only' },
    { value: 'high_critical', label: 'High & Critical' },
    { value: 'medium_above', label: 'Medium & Above' },
    { value: 'low_above', label: 'Low & Above' }
  ];

  const remediationStatusOptions = [
    { value: 'all', label: 'All Statuses' },
    { value: 'open', label: 'Open (1,847)' },
    { value: 'in_progress', label: 'In Progress (456)' },
    { value: 'assigned', label: 'Assigned (234)' },
    { value: 'resolved', label: 'Resolved (1,234)' },
    { value: 'false_positive', label: 'False Positive (89)' }
  ];

  const dateRangeOptions = [
    { value: '24h', label: 'Last 24 Hours' },
    { value: '7d', label: 'Last 7 Days' },
    { value: '30d', label: 'Last 30 Days' },
    { value: '90d', label: 'Last 90 Days' },
    { value: 'custom', label: 'Custom Range' }
  ];

  const handleFilterChange = (key, value) => {
    const newFilters = { ...filters, [key]: value };
    setFilters(newFilters);
    onFiltersChange?.(newFilters);
  };

  const resetFilters = () => {
    const defaultFilters = {
      assetGroup: 'all',
      vulnerabilityAge: 'all',
      severityThreshold: 'all',
      remediationStatus: 'all',
      dateRange: '7d'
    };
    setFilters(defaultFilters);
    onFiltersChange?.(defaultFilters);
  };

  const getActiveFilterCount = () => {
    return Object.values(filters)?.filter(value => value !== 'all' && value !== '7d')?.length;
  };

  const activeFilterCount = getActiveFilterCount();

  return (
    <div className="bg-card border border-border rounded-lg p-4 mb-6 elevation-1">
      <div className="flex items-center justify-between mb-4">
        <div className="flex items-center space-x-3">
          <div className="flex items-center space-x-2">
            <Icon name="Filter" size={20} className="text-primary" />
            <h3 className="text-lg font-semibold text-foreground">Dashboard Filters</h3>
          </div>
          {activeFilterCount > 0 && (
            <div className="flex items-center space-x-1 px-2 py-1 bg-primary/10 rounded-full">
              <Icon name="Check" size={14} className="text-primary" />
              <span className="text-xs font-medium text-primary">
                {activeFilterCount} active
              </span>
            </div>
          )}
        </div>
        
        <div className="flex items-center space-x-2">
          <Button
            variant="outline"
            size="sm"
            iconName="RotateCcw"
            onClick={resetFilters}
            disabled={activeFilterCount === 0}
          >
            Reset
          </Button>
          <Button
            variant="ghost"
            size="sm"
            iconName={isExpanded ? "ChevronUp" : "ChevronDown"}
            onClick={() => setIsExpanded(!isExpanded)}
          >
            {isExpanded ? 'Collapse' : 'Expand'}
          </Button>
        </div>
      </div>
      {/* Quick Filters - Always Visible */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4">
        <Select
          label="Asset Group"
          options={assetGroupOptions}
          value={filters?.assetGroup}
          onChange={(value) => handleFilterChange('assetGroup', value)}
          className="w-full"
        />
        
        <Select
          label="Severity Threshold"
          options={severityThresholdOptions}
          value={filters?.severityThreshold}
          onChange={(value) => handleFilterChange('severityThreshold', value)}
          className="w-full"
        />
        
        <Select
          label="Date Range"
          options={dateRangeOptions}
          value={filters?.dateRange}
          onChange={(value) => handleFilterChange('dateRange', value)}
          className="w-full"
        />
      </div>
      {/* Advanced Filters - Expandable */}
      {isExpanded && (
        <div className="border-t border-border pt-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
            <Select
              label="Vulnerability Age"
              description="Filter by when vulnerabilities were first detected"
              options={vulnerabilityAgeOptions}
              value={filters?.vulnerabilityAge}
              onChange={(value) => handleFilterChange('vulnerabilityAge', value)}
              className="w-full"
            />
            
            <Select
              label="Remediation Status"
              description="Filter by current remediation workflow status"
              options={remediationStatusOptions}
              value={filters?.remediationStatus}
              onChange={(value) => handleFilterChange('remediationStatus', value)}
              className="w-full"
            />
          </div>

          {/* Filter Summary */}
          <div className="bg-muted/50 rounded-lg p-4">
            <h4 className="text-sm font-medium text-foreground mb-2">Current Filter Summary</h4>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 text-xs">
              <div className="flex items-center space-x-2">
                <Icon name="Server" size={14} className="text-muted-foreground" />
                <span className="text-muted-foreground">Assets:</span>
                <span className="font-medium text-foreground">
                  {assetGroupOptions?.find(opt => opt?.value === filters?.assetGroup)?.label || 'All'}
                </span>
              </div>
              <div className="flex items-center space-x-2">
                <Icon name="AlertTriangle" size={14} className="text-muted-foreground" />
                <span className="text-muted-foreground">Severity:</span>
                <span className="font-medium text-foreground">
                  {severityThresholdOptions?.find(opt => opt?.value === filters?.severityThreshold)?.label || 'All'}
                </span>
              </div>
              <div className="flex items-center space-x-2">
                <Icon name="Calendar" size={14} className="text-muted-foreground" />
                <span className="text-muted-foreground">Period:</span>
                <span className="font-medium text-foreground">
                  {dateRangeOptions?.find(opt => opt?.value === filters?.dateRange)?.label || '7 Days'}
                </span>
              </div>
              <div className="flex items-center space-x-2">
                <Icon name="Clock" size={14} className="text-muted-foreground" />
                <span className="text-muted-foreground">Age:</span>
                <span className="font-medium text-foreground">
                  {vulnerabilityAgeOptions?.find(opt => opt?.value === filters?.vulnerabilityAge)?.label || 'All'}
                </span>
              </div>
              <div className="flex items-center space-x-2">
                <Icon name="CheckCircle" size={14} className="text-muted-foreground" />
                <span className="text-muted-foreground">Status:</span>
                <span className="font-medium text-foreground">
                  {remediationStatusOptions?.find(opt => opt?.value === filters?.remediationStatus)?.label || 'All'}
                </span>
              </div>
              <div className="flex items-center space-x-2">
                <Icon name="BarChart3" size={14} className="text-muted-foreground" />
                <span className="text-muted-foreground">Results:</span>
                <span className="font-medium text-primary">~2,847 vulnerabilities</span>
              </div>
            </div>
          </div>
        </div>
      )}
      {/* Quick Actions */}
      <div className="flex items-center justify-between pt-4 border-t border-border">
        <div className="flex items-center space-x-2 text-xs text-muted-foreground">
          <Icon name="Info" size={14} />
          <span>Filters apply to all dashboard components and visualizations</span>
        </div>
        
        <div className="flex items-center space-x-2">
          <Button variant="outline" size="xs" iconName="Save">
            Save View
          </Button>
          <Button variant="outline" size="xs" iconName="Share">
            Share
          </Button>
          <Button variant="outline" size="xs" iconName="Download">
            Export
          </Button>
        </div>
      </div>
    </div>
  );
};

export default DashboardFilters;